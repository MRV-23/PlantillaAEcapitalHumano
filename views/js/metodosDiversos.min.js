class MetodosDiversos{
    
    static validate_date(fecha){
        let patron=new RegExp("^(19|20)+([0-9]{2})([-])([0-9]{1,2})([-])([0-9]{1,2})$");
        if(fecha.search(patron)==0)
            return true;
        return false;
    }

    static init_validate_date(valor){
        let fecha=valor;
        let anio=fecha.split("-");
        if( anio[0] > 2018 && anio[1] > 0){
            return MetodosDiversos.validate_date(fecha)
        }	
    }

    static respuestaModal(titulo,subtitulo,callback){
        swal({
            title: titulo,
            text: subtitulo,
            input: 'text',
            inputPlaceholder: '',
            showCancelButton: true,
            cancelButtonColor: '#d33',
            confirmButtonText: 'Guardar',
            cancelButtonText: 'Cancelar'
        }).then(function(valor) {
            callback(valor);
        }).catch(swal.noop);
    }

    static mostrarRespuesta(tipo,titulo,subtitulo,tiempo,confirmacion=false){
        swal({
            title: titulo,
            text: subtitulo,
            type: tipo,
            timer: tiempo,
            showConfirmButton: confirmacion,
            allowOutsideClick: false
        }).catch(swal.noop);
    }

    static consultaAjaxFormulario(ruta,data,callback){
        $.ajax({
            url: ruta_server + ruta,
            method: "POST",
            data: data,
            cache: false,
            contentType: false,
            processData: false,
            dataType: "json"
        }).done(function(respuesta) {
            callback(respuesta.error,respuesta);
        }).fail(function(error) {
            callback(true,error);
        });  
    }

    static consultaAjaxData(ruta,data,callback){
        $.ajax({
            url: ruta_server + ruta,
            type: "POST",
            data: data,
            dataType: "json"
        }).done(function(respuesta) {
            callback(respuesta.error,respuesta);
        }).fail(function(error) {
            callback(true,error);
        });  
    }

    static crearRegistro(titulo,subtitulo,callback,icono = true){

        let i = icono === true ? 'question' : '';
        swal({
            title: titulo,
            text: subtitulo,
            type: i,
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: '¡Sí, continuar!',
            cancelButtonText: '¡No!'
        }).then((result) => {
            callback(true);            
        }).catch((result)=> {
            callback(false);
        });
    }

    static obtenerAnio(fecha){
        $('#asignarAnio').text(fecha);
        let usuario = $('#calendario').attr('name');
        
        
        MetodosDiversos.consultaAjaxData("controllers/ajaxPermisos.php",{cargarPermisos:true,anio:fecha,usuario},(error,respuesta)=>{
            //console.log(respuesta);
            if(!error){
                $('#asignarVaccaionesDisfrutadas').text(respuesta.disfrutadas);
                $('#asiganarBonosPlus').text(respuesta.bonos);
                $('#asignarPermisos').text(respuesta.permisos);
                $('#asignarFaltas').text(respuesta.faltas);
                $('#asignarPorAutorizar').text(respuesta.porAutorizar);
                $('#diasDisponibles_').text(respuesta.disponibles);
            } 
        });
    }

    static convertirDecimal(numero){ //54,895,890.00 = 54895890.00
        if(numero == '')
            return 0;
        numero = numero.replace(/,/g,'');
        numero = numero.replace('.','');
        return numero.substring(0, numero.length-2) + '.' + numero.substring(numero.length-2, numero.length);
    }

    static mascaraMoneda(numero,constante){ //54895890.00 = 54,895,890.00 
        if(numero == null)
            return;
        let tempInput = $(document.createElement("input"));
        tempInput.val((numero * constante).toFixed(2));
        tempInput.mask('000,000,000.00', { reverse: true });
        return tempInput.val();
    }

    static formatBytes(bytes, decimals = 2) {
        if (bytes === 0) return '0 Bytes';
        const k = 1024;
        const dm = decimals < 0 ? 0 : decimals;
        const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];
        const i = Math.floor(Math.log(bytes) / Math.log(k));
        return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];
    }

    static formatDateTime(dateTime){
        let a = dateTime.split(' ');
        let fecha = a[0].substr(8,2) + '-' + a[0].substr(5,2) + '-' +  a[0].substr(0,4);
        return fecha + ' ' + a[1];
    }

    /*static inputTextArea(texto,callback,botonCancelar=true){
        swal({
            title: 'Motivo de apertura',
            text: '',
            input: 'textarea',
            inputValue: texto,
            inputPlaceholder: '',
            showCancelButton: botonCancelar,
            cancelButtonColor: '#d33',
            confirmButtonText: 'Aceptar',
            cancelButtonText: 'Cancelar'
        }).then(function(valor) {
            callback(valor);
        }).catch(swal.noop);
    }*/

    static alertTextArea(titulo,texto,callback){
        swal({
            title: titulo,
            text: '',
            input: 'textarea',
            inputValue: texto,
            inputPlaceholder: 'Describe la funcionalidad del campo...',
            showCancelButton: true,
            cancelButtonColor: '#d33',
            confirmButtonText: 'Aceptar',
            cancelButtonText: 'Cancelar'
        }).then(function(val) {
            callback(val);
        }).catch(swal.noop);
    }

    static inputSelectAreaSistemas(ticket,callback){
        swal({
            title: 'Redirigir el ticket ' + ticket + ' a:',
            input: 'select',
            inputOptions: {
              1: 'SOPORTE TÉCNICO',
              2: 'GIRO',
              3: 'DESARROLLO'
            },
            inputPlaceholder: '',
            confirmButtonText: 'Aceptar',
            cancelButtonColor: '#d33',
            showCancelButton: true
        }).then(function(valor) {
            callback(valor);
        }).catch(swal.noop);
    }
    // MetodosDiversos.paginadorJS(Test.tabla,Test.row,Test.botton_pagina,document.getElementById('paginador'),Test.totalRegistros,document.getElementById('dataPermisosUser'))
    static paginadorJS(items,rows_por_page,page,elemento,totalRegistros,elementoPaginador){ // falta mandar por parametri ek dic donde se imprimiera el registro, el total de registros de la lista , cuantas  row tendra la tabla
        console.log("rowxpage: "+rows_por_page+" page: "+page)
        const wrapper = document.getElementById('dataPermisosUser');
        wrapper.innerHTML = "";
	    page--;

	    let start = rows_por_page * page;
	    let end = start + rows_por_page;
        console.log("start: "+start+" end: "+end)
        end > totalRegistros? end=totalRegistros : end=end;
        
        //let end = Test.totalRegistros;
	    let paginatedItems = items.slice(start, end);
        //console.log("paginaItem =: "+paginatedItems)
      //  console.log("start: "+start+" end: "+end)
	    for (let i = 0; i < paginatedItems.length; i++) {
	    	let item = paginatedItems[i];

	    	let item_element = document.createElement('div');
	    	item_element.classList.add('item');
	    	item_element.innerHTML = item;

           // console.log("Res: "+item_element)
        
	    	wrapper.append(item_element);
	    }
        //MetodosDiversos.paginadorJS(Test.lista,Test.row,Test.botton_pagin,document.getElementById('paginador'),Test.totalRegistros,document.getElementById('dataPermisosUser'))
        //Test.lis_paginador(Test.tabla,Test.row,Test.botton_pagina)
        MetodosDiversos.buttonsPaginador(paginatedItems,rows_por_page,elemento,totalRegistros,page)

    }

    static buttonsPaginador(items,row_por_page,elemento,totalRegistros,pagina){

        //console.log("largo es: "+items.length+" rows: "+row_por_page)

        const wrapper = document.getElementById('paginador');

        let page_count = Math.ceil(totalRegistros/row_por_page)
        //let page_count = Math.ceil(row_por_page/items.length)
        console.log("resultado de math.ceil ="+page_count)
        for (let i = 0; i < page_count; i++) {
            let btn = MetodosDiversos.buttonSetting(i+1,pagina,elemento)
            wrapper.append(btn)
            
        }
        
    }

    static buttonSetting(pagina,NumeroPagina,elemento){

        let button = document.createElement('a');
        button.className = "btn btn-info";
        button.innerText = pagina;
        if (NumeroPagina == pagina) button.classList.add('active');

        /*button.addEventListener('click', function (e) {
            console.log("entro al clik")
          //  e.preventDefault()
            NumeroPagina = pagina;
           // DisplayList(items, list_element, rows, current_page);
           
           // paginadorJS(items,rows_por_page,page,elemento,totalRegistros,elementoPaginador)
    
            let current_btn = document.querySelector('active');
            current_btn.classList.remove('.active');
    
            button.classList.add('active');
            const wrapper = elemento
            wrapper.innerHTML="";
           // Test.validarUsuario()

            ///return true;
            
        });*/
        
        return button;//
    }

    static main(){
        $('.informativo,.informativo2').click(function(){
            swal($(this).parent().parent().children('label').text(),$(this).attr('info'), "info").catch(swal.noop);
        });
    }
}

MetodosDiversos.main();



/*Ejemplo para validar fechas

$('#user_date').change(function(){
	MetodosDiversos.init_validate_date($(this).val());
});*/